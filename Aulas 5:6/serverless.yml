# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: vhparaujo
# "service" is the name of this project. This will also be added to your AWS resource names.
service: aula5-clinica

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:*
            - events:*
          Resource: "*"

functions:
  # Patients functions
  patientsCreate:
    handler: src/patients/functions/create.handler
    events:
      - http:
          path: patients
          method: POST

  patientsFindById:
    handler: src/patients/functions/find.findByIdHandler
    events:
      - http:
          method: GET
          path: patients/{id}

  patientsFind:
    handler: src/patients/functions/find.findHandler
    events:
      - http:
          method: GET
          path: patients

  patientsPatch:
    handler: src/patients/functions/patch.handler
    events:
      - http:
          method: PATCH
          path: patients/{id}

  patientsRemove:
    handler: src/patients/functions/remove.handler
    events:
      - http:
          method: DELETE
          path: patients/{id}

  patientsMailSender:
    handler: src/patients/functions/mail-sender.handler
    events:
      - eventBridge:
          pattern:
            source:
              - "aula5-clinica"
            detail-type:
              - "PatientCreated"

  patientsPushSender:
    handler: src/patients/functions/push-sender.handler
    events:
      - eventBridge:
          pattern:
            source:
              - "aula5-clinica"
            detail-type:
              - "PatientCreated"

  # Doctors functions
  doctorsCreate:
    handler: src/doctors/functions/create.handler
    events:
      - http:
          path: doctors
          method: POST

  doctorsFindById:
    handler: src/doctors/functions/find.findByIdHandler
    events:
      - http:
          method: GET
          path: doctors/{id}

  doctorsFind:
    handler: src/doctors/functions/find.findHandler
    events:
      - http:
          method: GET
          path: doctors

  doctorsPatch:
    handler: src/doctors/functions/patch.handler
    events:
      - http:
          method: PATCH
          path: doctors/{id}

  doctorsRemove:
    handler: src/doctors/functions/remove.handler
    events:
      - http:
          method: DELETE
          path: doctors/{id}

    # Funções de consultas (appointments)
  appointmentsCreate:
    handler: src/appointments/functions/create.handler
    events:
      - http:
          path: appointments
          method: POST

  appointmentsFindById:
    handler: src/appointments/functions/find.findByIdHandler
    events:
      - http:
          method: GET
          path: appointments/{id}

  appointmentsFind:
    handler: src/appointments/functions/find.findHandler
    events:
      - http:
          method: GET
          path: appointments

  appointmentsPatch:
    handler: src/appointments/functions/patch.handler
    events:
      - http:
          method: PATCH
          path: appointments/{id}

  appointmentsRemove:
    handler: src/appointments/functions/remove.handler
    events:
      - http:
          method: DELETE
          path: appointments/{id}

resources:
  Resources:
    patientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Patient
        AttributeDefinitions:
          - AttributeName: PK #taxId
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    doctorsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Doctor
        AttributeDefinitions:
          - AttributeName: PK #doctorId
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    appointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Appointment
        AttributeDefinitions:
          - AttributeName: PK #appointmentId
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
